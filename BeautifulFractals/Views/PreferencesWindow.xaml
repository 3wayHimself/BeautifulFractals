<Window x:Class="TAlex.BeautifulFractals.PreferencesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:data="clr-namespace:TAlex.BeautifulFractals.Data"
        xmlns:viewmodels="clr-namespace:TAlex.BeautifulFractals.ViewModels"
        xmlns:behaviours="clr-namespace:TAlex.BeautifulFractals.Behaviours"
        xmlns:talex="http://schemas.talex-soft.com/2010/xaml/presentation"
        xmlns:env="clr-namespace:TAlex.Common.Environment;assembly=TAlex.Common"
        Height="350" Width="480" WindowStartupLocation="CenterScreen" ResizeMode="NoResize"
        DataContext="{Binding Source={StaticResource viewModelLocator}, Path=PreferencesWindowViewModel, Mode=OneTime}"
        Title="{Binding Title}">
    <Window.Resources>
        <talex:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <talex:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <talex:HyperlinkNavigateCommand x:Key="HyperlinkNavigateCommand" />
        <data:DisplayToBrushConverter x:Key="DisplayToBrushConverter" />
        <data:RenderColorToWpfColorConverter x:Key="RenderColorToWpfColorConverter" />
        <data:BackgroundPreviewMultiConverter x:Key="BackgroundPreviewMultiConverter" />
        <data:TimeSpanToSecondsConverter x:Key="TimeSpanToSecondsConverter" />
    </Window.Resources>

    <Window.Style>
        <Style>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CloseSignal}" Value="true">
                    <Setter Property="behaviours:WindowCloseBehavior.Close" Value="true" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    
    <Window.Background>
        <DrawingBrush TileMode="Tile" Viewport="0,0,4,4" ViewportUnits="Absolute">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Brush="#2c3d5a">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0,0,1,1"></RectangleGeometry>
                        </GeometryDrawing.Geometry>    
                    </GeometryDrawing>
                    <GeometryDrawing Brush="#35496a">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0.5,0,0.25,0.25"></RectangleGeometry>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="#35496a">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0,0.5,0.25,0.25"></RectangleGeometry>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="#293955">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0,0.25,0.25,0.25"></RectangleGeometry>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="#293955">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0.5,0.75,0.25,0.25"></RectangleGeometry>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>
    </Window.Background>
    
    <Grid Margin="12">        
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        
        <TabControl Grid.Row="0">
            <TabItem Header="General">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.6*" />
                        <RowDefinition Height="0.4*" />
                    </Grid.RowDefinitions>
                    
                    <GroupBox Header="Background">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.4*" />
                                <ColumnDefinition Width="0.35*" />
                                <ColumnDefinition Width="0.35*" />
                            </Grid.ColumnDefinitions>
                            
                            <Border BorderBrush="Silver" BorderThickness="1" CornerRadius="3" Padding="4">
                                <Rectangle Name="bgPreviewRectangle">
                                    <Rectangle.Fill>
                                        <MultiBinding Converter="{StaticResource BackgroundPreviewMultiConverter}">
                                            <Binding Path="PrimaryBackColor" />
                                            <Binding Path="SecondaryBackColor" />
                                            <Binding Path="BackGradientType" />
                                        </MultiBinding>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            
                            <Grid Grid.Column="1" Height="70" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="20" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <talex:ColorChip PreviewAreaWidth="24" PreviewAreaHeight="20" Grid.Row="0" SelectedColor="{Binding PrimaryBackColor, Mode=TwoWay, Converter={StaticResource RenderColorToWpfColorConverter}}">First color</talex:ColorChip>

                                <Button Height="18" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Background="Transparent" BorderBrush="Transparent" Command="{Binding SwapBackgroundColorsCommand}">
                                    <Viewbox>
                                        <Canvas Width="42.6528" Height="54.36" Background="Transparent">
                                            <Canvas.LayoutTransform>
                                                <RotateTransform Angle="90" />
                                            </Canvas.LayoutTransform>

                                            <Path Width="39.536" Height="25.1414" Canvas.Left="3.11679" Canvas.Top="0" Stretch="Fill" Fill="#FF555555" Data="F1 M 30.0901,25.1254L 42.6528,12.5626L 30.0901,0L 21.8048,0L 31.3595,9.55469L 3.11679,9.55469L 3.11679,15.636L 31.2928,15.636L 21.7888,25.1414L 30.0901,25.1254 Z "/>
                                            <Path Width="39.536" Height="25.1414" Canvas.Left="0" Canvas.Top="29.2186" Stretch="Fill" Fill="#FF555555" Data="F1 M 12.564,29.2346L 0,41.7974L 12.5627,54.36L 20.848,54.36L 11.2933,44.8053L 39.536,44.8053L 39.536,38.724L 11.36,38.724L 20.864,29.2186L 12.564,29.2346 Z "/>
                                        </Canvas>
                                    </Viewbox>
                                </Button>

                                <talex:ColorChip PreviewAreaWidth="24" PreviewAreaHeight="20" Grid.Row="2" SelectedColor="{Binding SecondaryBackColor, Mode=TwoWay, Converter={StaticResource RenderColorToWpfColorConverter}}">Second color</talex:ColorChip>
                            </Grid>
                            
                            <Grid Grid.Column="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <RadioButton Grid.Row="0" VerticalAlignment="Center" Content="Vertical" IsChecked="{Binding BackGradientType, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewmodels:BackgroundGradientType.Vertical}}" />
                                <RadioButton Grid.Row="1" VerticalAlignment="Center" Content="Horizontal" IsChecked="{Binding BackGradientType, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewmodels:BackgroundGradientType.Horizontal}}" />
                                <RadioButton Grid.Row="2" VerticalAlignment="Center" Content="Forward Diagonal" IsChecked="{Binding BackGradientType, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewmodels:BackgroundGradientType.ForwardDiagonal}}" />
                                <RadioButton Grid.Row="3" VerticalAlignment="Center" Content="Backward Diagonal" IsChecked="{Binding BackGradientType, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewmodels:BackgroundGradientType.BackwardDiagonal}}" />
                            </Grid>
                        </Grid>
                    </GroupBox>
                    
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock Text="Delay between shows:" Margin="0,0,10,0" />
                            <Label Content="{Binding ElementName=delaySlider, Path=Value}" ContentStringFormat="F1" Padding="0" Margin="0,0,3,0" />
                            <TextBlock Text="sec." />
                        </StackPanel>

                        <Slider Name="delaySlider" VerticalAlignment="Center" Grid.Column="1" Maximum="10" SmallChange="0.1" IsSnapToTickEnabled="True" TickPlacement="BottomRight" TickFrequency="0.5" Value="{Binding Delay, Converter={StaticResource TimeSpanToSecondsConverter}}" />

                        <CheckBox VerticalAlignment="Center" Grid.Row="1" Content="Random fractal sequence" IsChecked="{Binding RandomOrder}" />
                        <CheckBox VerticalAlignment="Center" Grid.Column="1" Grid.Row="1" Content="Exit on mouse move" IsChecked="{Binding ExitOnMouseMove}" />
                        <CheckBox VerticalAlignment="Center" Grid.Row="2" Content="Show fractal captions" IsChecked="{Binding ShowFractalCaptions}" />
                        <TextBlock Name="captionStyleTextBlock" VerticalAlignment="Center" Grid.Column="2" Grid.Row="2">
                            <Hyperlink IsEnabled="{Binding ShowFractalCaptions}" Command="{Binding OpenCaptionStyleChooserDialogCommand}">Caption style</Hyperlink>
                        </TextBlock>
                    </Grid>
                </Grid>
            </TabItem>
            
            <TabItem Header="Fractals">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="23" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    
                    <Grid Height="22" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="22" />
                        </Grid.ColumnDefinitions>

                        <Grid>
                            <Grid.Resources>
                                <Style TargetType="TextBox" x:Key="stlHintbox">
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="">
                                            <Setter Property="TextBox.Background">
                                                <Setter.Value>
                                                    <VisualBrush Stretch="None" AlignmentX="Left" AlignmentY="Center" Visual="{Binding ElementName=hintText}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Resources>

                            <TextBox Name="searchQueryTextBox" TabIndex="1" Tag="Search" TextOptions.TextRenderingMode="ClearType" BorderThickness="1,1,0,1" Style="{StaticResource stlHintbox}" Text="{Binding Path=FractalsSearchQuery, UpdateSourceTrigger=PropertyChanged}">
                                <TextBox.BorderBrush>
                                    <LinearGradientBrush EndPoint="0,1">
                                        <GradientStop Color="#a5cae4" Offset="0" />
                                        <GradientStop Color="#b8cbd8" Offset="1" />
                                    </LinearGradientBrush>
                                </TextBox.BorderBrush>
                            </TextBox>
                            <Border Visibility="Hidden">
                                <TextBlock Padding="2,0,0,3" Name="hintText" Background="{Binding Path=Background, ElementName=searchQueryTextBox}" Text="{Binding Tag, ElementName=searchQueryTextBox}" Foreground="Gray" VerticalAlignment="Center" />
                            </Border>
                        </Grid>

                        <Button SnapsToDevicePixels="True" Background="Transparent" Grid.Column="1" ToolTip="Clear Search" Command="{Binding ClearSearchQueryCommand}">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{Binding Path=BorderBrush, ElementName=searchQueryTextBox}" BorderThickness="1">
                                                    <Grid SnapsToDevicePixels="True">
                                                        <ContentPresenter SnapsToDevicePixels="True" Content="{TemplateBinding Content}" />
                                                    </Grid>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                            
                            <Path Width="8" Height="8" Margin="0" SnapsToDevicePixels="True" Data="M 0,0 L 7,7 M 7,0 L 0,7">
                                <Path.Stroke>
                                    <LinearGradientBrush EndPoint="0,1">
                                        <GradientStop Color="#65a4d0" Offset="0" />
                                        <GradientStop Color="#244d7b" Offset="1" />
                                    </LinearGradientBrush>
                                </Path.Stroke>
                                <Path.Effect>
                                    <DropShadowEffect BlurRadius="2" ShadowDepth="1" Color="#cdcdcd" />
                                </Path.Effect>
                            </Path>
                        </Button>
                    </Grid>

                    <ListView Grid.Row="1" ItemsSource="{Binding FractalsView}">
                        <ListView.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding OpenFractalPreviewCommand}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
                        </ListView.InputBindings>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ListView.ItemContainerStyle>

                        <talex:DragAndDropService.DragAndDropManager>
                            <talex:ItemsControlDragDropManager />
                        </talex:DragAndDropService.DragAndDropManager>

                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="30">
                                    <GridViewColumn.Header>
                                        <CheckBox IsChecked="{Binding DisplayAllFractals}" ToolTip="Display" />
                                    </GridViewColumn.Header>
                                    
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Path=Display}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Name" Width="360">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" Foreground="{Binding Path=Display, Converter={StaticResource DisplayToBrushConverter}}">
                                                <TextBlock.InputBindings>
                                                    <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DataContext.OpenFractalPreviewCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}" />
                                                </TextBlock.InputBindings>
                                            </TextBlock>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </TabItem>

            <TabItem Header="About" DataContext="{Binding Source={StaticResource viewModelLocator}, Path=AboutViewModel, Mode=OneTime}">                
                <Grid>
                    <Grid.Resources>
                        <DropShadowEffect x:Key="textEffect" ShadowDepth="1" Direction="-90" Color="White" BlurRadius="1" />
                    </Grid.Resources>
                    <Grid.Effect>
                        <DropShadowEffect BlurRadius="5" ShadowDepth="4" Color="Silver" />
                    </Grid.Effect>
                    
                    <Border BorderBrush="Silver">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0,1">
                                <GradientStop Color="#ffaaaaaa" Offset="0" />
                                <GradientStop Color="#406186" Offset="0.3999" />
                                <GradientStop Color="#406186" Offset="0.4" />
                                <GradientStop Color="#b9d1ed" Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>

                    <Border Background="#22ffffff" Height="90" VerticalAlignment="Top">
                    </Border>

                    <Image Source="/Resources/Images/logo_bg.png" Stretch="UniformToFill" Opacity="0.06" />

                    <Label Margin="0,25,0,0" FontSize="36" FontWeight="600" FontFamily="Segoe UI, Arial" VerticalAlignment="Top" HorizontalContentAlignment="Center"
                        Content="{Binding AboutLogoTitle}">
                        <Label.BitmapEffect>
                            <DropShadowBitmapEffect Color="White" Direction="270" ShadowDepth="1" Softness="0" />
                        </Label.BitmapEffect>
                    </Label>
                    <Label Margin="0,17,75,0" FontSize="12" HorizontalAlignment="Right" VerticalAlignment="Top" FontWeight="500"
                        
                        Content="{Binding Version}">
                        <Label.BitmapEffect>
                            <DropShadowBitmapEffect Color="Black" Direction="90" ShadowDepth="1" Softness="0" />
                        </Label.BitmapEffect>
                    </Label>

                    <StackPanel Margin="60,105,0,0" VerticalAlignment="Top" HorizontalAlignment="Left">
                        <Label Padding="0">
                            This product is distributed as freeware
                        </Label>
                    </StackPanel>

                    <Grid Margin="20,145,0,0" VerticalAlignment="Top" HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="130" />
                            <ColumnDefinition Width="200" />
                        </Grid.ColumnDefinitions>
                        
                        <Grid.RowDefinitions>                            
                            <RowDefinition Height="20" />
                            <RowDefinition Height="20" />
                        </Grid.RowDefinitions>

                        <!-- E-Mail link -->
                        <Label Grid.Row="0" Grid.Column="0" Padding="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                            E-Mail:
                        </Label>

                        <Label Grid.Row="0" Grid.Column="1" Padding="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Hyperlink CommandParameter="{Binding Mode=OneTime, Path=EmailAddress}" Command="{StaticResource HyperlinkNavigateCommand}">
                                <TextBlock Text="{Binding Mode=OneTime, Path=EmailTitle}" />
                            </Hyperlink>
                        </Label>

                        <!-- Web link -->
                        <Label Grid.Row="1" Grid.Column="0" Padding="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                            Web:
                        </Label>

                        <Label Grid.Row="1" Grid.Column="1" Padding="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Hyperlink CommandParameter="{Binding Mode=OneTime, Path=HomepageUrl}" Command="{StaticResource HyperlinkNavigateCommand}">
                                <TextBlock Text="{Binding Mode=OneTime, Path=HomepageTitle}" />
                            </Hyperlink>
                        </Label>
                    </Grid>

                    <!-- Copyright -->
                    <Label Margin="0,0,0,12" Padding="0" VerticalAlignment="Bottom" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                        Content="{Binding Copyright}" Effect="{StaticResource textEffect}">
                    </Label>
                </Grid>
            </TabItem>
        </TabControl>

        <Button Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Content="_OK" Width="80" Height="25" Margin="0,0,90,0" Command="{Binding SaveCommand}" />
        <Button Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Content="_Cancel" IsCancel="True" Width="80" Height="25" Command="{Binding CancelCommand}" />
    </Grid>
</Window>
