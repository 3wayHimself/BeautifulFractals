<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TAlex.Common</name>
    </assembly>
    <members>
        <member name="T:TAlex.Common.Extensions.ListExtensions">
            <summary>
            Provides a set of static methods for querying objects that implement <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
        </member>
        <member name="M:TAlex.Common.Extensions.ListExtensions.Shuffle``1(System.Collections.Generic.IList{``0})">
            <summary>
            Shuffles the elements of list.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IList`1"/> for shuffling.</param>
        </member>
        <member name="T:TAlex.Common.Environment.ApplicationInfo">
            <summary>
            Provides the information about currently executing application,
            such as title, description, company, version, etc.
            </summary>
        </member>
        <member name="P:TAlex.Common.Environment.ApplicationInfo.Title">
            <summary>
            Gets the current application's title.
            </summary>
        </member>
        <member name="P:TAlex.Common.Environment.ApplicationInfo.Description">
            <summary>
            Gets the current application's description.
            </summary>
        </member>
        <member name="P:TAlex.Common.Environment.ApplicationInfo.Company">
            <summary>
            Gets the current application's company.
            </summary>
        </member>
        <member name="P:TAlex.Common.Environment.ApplicationInfo.Product">
            <summary>
            Gets the current application's product.
            </summary>
        </member>
        <member name="P:TAlex.Common.Environment.ApplicationInfo.Copyright">
            <summary>
            Gets the current application's copyright.
            </summary>
        </member>
        <member name="P:TAlex.Common.Environment.ApplicationInfo.CopyrightDisplayText">
            <summary>
            Gets the current application's copyright display text.
            </summary>
        </member>
        <member name="P:TAlex.Common.Environment.ApplicationInfo.Trademark">
            <summary>
            Gets the current application's trademark.
            </summary>
        </member>
        <member name="P:TAlex.Common.Environment.ApplicationInfo.Version">
            <summary>
            Gets the current application's version.
            </summary>
        </member>
        <member name="T:TAlex.Common.Extensions.EnumerableExtensions">
            <summary>
            Provides a set of static methods for querying objects that implement <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
        </member>
        <member name="M:TAlex.Common.Extensions.EnumerableExtensions.Randomize``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the randomized source enumerable.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to return the randomized enumerable.</param>
            <returns>randomized source enumerable.</returns>
        </member>
        <member name="M:TAlex.Common.Extensions.EnumerableExtensions.Search``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Collections.Generic.IEnumerable{System.Func{``0,System.Object}})">
            <summary>
            Filters a sequence of values based on a search request.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to return the search result.</param>
            <param name="query">A string representing the search request.</param>
            <param name="selectors">Sets of selectors by that needed for search executing.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains elements from the input sequence that satisfy the search request.</returns>
            <exception cref="T:System.NullReferenceException">query or selectors is null.</exception>
        </member>
        <member name="M:TAlex.Common.Extensions.EnumerableExtensions.Search``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Collections.Generic.IEnumerable{System.Func{``0,System.Object}},TAlex.Common.Extensions.DefaultComplianceType)">
            <summary>
            Filters a sequence of values based on a search request.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to return the search result.</param>
            <param name="query">A string representing the search request.</param>
            <param name="selectors">Sets of selectors by that needed for search executing.</param>
            <param name="complianceType"></param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains elements from the input sequence that satisfy the search request.</returns>
            <exception cref="T:System.NullReferenceException">query or selectors is null.</exception>
        </member>
        <member name="M:TAlex.Common.Extensions.EnumerableExtensions.Search``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Collections.Generic.IEnumerable{System.Func{``0,System.Object}},TAlex.Common.Extensions.DefaultOperator,TAlex.Common.Extensions.DefaultComplianceType)">
            <summary>
            Filters a sequence of values based on a search request.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to return the search result.</param>
            <param name="query">A string representing the search request.</param>
            <param name="selectors">Sets of selectors by that needed for search executing.</param>
            <param name="op">A default operator for searching.</param>
            <param name="complianceType">A default compliance type for searching.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains elements from the input sequence that satisfy the search request.</returns>
            <exception cref="T:System.NullReferenceException">query or selectors is null.</exception>
        </member>
        <member name="T:TAlex.Common.Extensions.DefaultOperator">
            <summary>
            Represents the default operator for parsing queries.
            </summary>
        </member>
        <member name="F:TAlex.Common.Extensions.DefaultOperator.And">
            <summary>
            Requires that all terms in the search results.
            </summary>
        </member>
        <member name="F:TAlex.Common.Extensions.DefaultOperator.Or">
            <summary>
            Requires at least one of the terms in the search results.
            </summary>
        </member>
        <member name="T:TAlex.Common.Diagnostics.ProcessInfo">
            <summary>
            Provides the basic information of the currently executing process.
            </summary>
        </member>
        <member name="P:TAlex.Common.Diagnostics.ProcessInfo.PrivateWorkingSet">
            <summary>
            Gets the size of the physical memory that uses of current process.
            </summary>
        </member>
        <member name="T:TAlex.Common.Diagnostics.ErrorReporting.ErrorReport">
            <summary>
            Represents the model of the error report.
            </summary>
        </member>
        <member name="M:TAlex.Common.Diagnostics.ErrorReporting.ErrorReport.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:TAlex.Common.Diagnostics.ErrorReporting.ErrorReport"/> class.
            </summary>
            <param name="exception">The target exception for which to get a report.</param>
        </member>
        <member name="M:TAlex.Common.Diagnostics.ErrorReporting.ErrorReport.GenerateFullHtmlReport">
            <summary>
            Generate the full html error report, that including additional
            information about environment, system and currently executing process.
            </summary>
            <returns>A <see cref="T:System.String"/> represents the full html error report.</returns>
        </member>
        <member name="P:TAlex.Common.Diagnostics.ErrorReporting.ErrorReport.TargetException">
            <summary>
            Gets the target exception.
            </summary>
        </member>
        <member name="P:TAlex.Common.Diagnostics.ErrorReporting.ErrorReport.Subject">
            <summary>
            Gets the subject of the current error report.
            </summary>
        </member>
        <member name="T:TAlex.Common.Extensions.DefaultComplianceType">
            <summary>
            Represents the default type of search compliance.
            </summary>
        </member>
        <member name="F:TAlex.Common.Extensions.DefaultComplianceType.Strict">
            <summary>
            Compliance type, which requires full compliance by comparing the words.
            </summary>
        </member>
        <member name="F:TAlex.Common.Extensions.DefaultComplianceType.Beginning">
            <summary>
            Compliance type, in which variation is permitted endings by comparison.
            </summary>
        </member>
        <member name="F:TAlex.Common.Extensions.DefaultComplianceType.Ending">
            <summary>
            Compliance type, in which variation is permitted beginnings by comparison.
            </summary>
        </member>
        <member name="F:TAlex.Common.Extensions.DefaultComplianceType.Occurrence">
            <summary>
            Compliance type, in which variation is permitted beginnings
            and endings by comparison.
            </summary>
        </member>
        <member name="T:TAlex.Common.Consoles.ConsoleEx">
            <summary>
            Represents the additional (helper) methods for console applications.
            </summary>
        </member>
        <member name="M:TAlex.Common.Consoles.ConsoleEx.Write(System.String,System.ConsoleColor,System.Object[])">
            <summary>
            Writes the colored text representation of the specified array of objects to the standard
            output stream using the specified format information.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="color">A console color for displayed text.</param>
            <param name="args">An array of objects to write using format.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">format or arg is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="M:TAlex.Common.Consoles.ConsoleEx.WriteLine(System.String,System.ConsoleColor,System.Object[])">
            <summary>
            Writes the colored text representation of the specified array of objects, followed
            by the current line terminator, to the standard output stream using the specified
            format information.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="color">A console color for displayed text.</param>
            <param name="args">An array of objects to write using format.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">format or arg is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="M:TAlex.Common.Consoles.ConsoleEx.WriteError(System.String,System.Object[])">
            <summary>
            Writes the error text (red color) representation of the specified array of objects
            to the standard output stream using the specified format information.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write using format.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">format or arg is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="M:TAlex.Common.Consoles.ConsoleEx.WriteErrorLine(System.String,System.Object[])">
            <summary>
            Writes the error text (red color) representation of the specified array of objects, followed
            by the current line terminator, to the standard output stream using the specified format information.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write using format.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">format or arg is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="M:TAlex.Common.Consoles.ConsoleEx.WriteWarning(System.String,System.Object[])">
            <summary>
            Writes the warning text (yellow color) representation of the specified array of objects
            to the standard output stream using the specified format information.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write using format.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">format or arg is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="M:TAlex.Common.Consoles.ConsoleEx.WriteWarningLine(System.String,System.Object[])">
            <summary>
            Writes the warning text (yellow color) representation of the specified array of objects, followed
            by the current line terminator, to the standard output stream using the specified format information.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write using format.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">format or arg is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="M:TAlex.Common.Consoles.ConsoleEx.WriteInformation(System.String,System.Object[])">
            <summary>
            Writes the information text (white color) representation of the specified array of objects
            to the standard output stream using the specified format information.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write using format.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">format or arg is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="M:TAlex.Common.Consoles.ConsoleEx.WriteInformationLine(System.String,System.Object[])">
            <summary>
            Writes the information text (white color) representation of the specified array of objects, followed
            by the current line terminator, to the standard output stream using the specified format information.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An array of objects to write using format.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
            <exception cref="T:System.ArgumentNullException">format or arg is null.</exception>
            <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
        </member>
        <member name="T:TAlex.Common.Environment.SystemInfo">
            <summary>
            Provides the information about system, such as total physical memory,
            processor architecture, etc.
            </summary>
        </member>
        <member name="P:TAlex.Common.Environment.SystemInfo.ProcessorArchitecture">
            <summary>
            Gets the string representing the current processor architecture, such as x86, x64, etc.
            </summary>
        </member>
        <member name="P:TAlex.Common.Environment.SystemInfo.TotalPhysicalMemory">
            <summary>
            Gets the size of physical memory, in bytes.
            </summary>
        </member>
        <member name="P:TAlex.Common.Environment.SystemInfo.TotalPhysicalMemoryText">
            <summary>
            Gets the size of physical memory, string representation.
            </summary>
        </member>
        <member name="P:TAlex.Common.Environment.SystemInfo.AvailablePhysicalMemory">
            <summary>
            Gets the size of physical memory available, in bytes.
            </summary>
        </member>
        <member name="P:TAlex.Common.Environment.SystemInfo.AvailablePhysicalMemoryText">
            <summary>
            Gets the size of physical memory available, string representation.
            </summary>
        </member>
        <member name="T:TAlex.Common.Environment.SystemInfo.MEMORYSTATUSEX">
            <summary>
            Contains information about the current state of both physical and virtual memory, including extended memory
            </summary>
        </member>
        <member name="F:TAlex.Common.Environment.SystemInfo.MEMORYSTATUSEX.dwLength">
            <summary>
            Size of the structure, in bytes. You must set this member before calling GlobalMemoryStatusEx.
            </summary>
        </member>
        <member name="F:TAlex.Common.Environment.SystemInfo.MEMORYSTATUSEX.dwMemoryLoad">
            <summary>
            Number between 0 and 100 that specifies the approximate percentage of physical memory that is in use (0 indicates no memory use and 100 indicates full memory use).
            </summary>
        </member>
        <member name="F:TAlex.Common.Environment.SystemInfo.MEMORYSTATUSEX.ullTotalPhys">
            <summary>
            Total size of physical memory, in bytes.
            </summary>
        </member>
        <member name="F:TAlex.Common.Environment.SystemInfo.MEMORYSTATUSEX.ullAvailPhys">
            <summary>
            Size of physical memory available, in bytes.
            </summary>
        </member>
        <member name="F:TAlex.Common.Environment.SystemInfo.MEMORYSTATUSEX.ullTotalPageFile">
            <summary>
            Size of the committed memory limit, in bytes. This is physical memory plus the size of the page file, minus a small overhead.
            </summary>
        </member>
        <member name="F:TAlex.Common.Environment.SystemInfo.MEMORYSTATUSEX.ullAvailPageFile">
            <summary>
            Size of available memory to commit, in bytes. The limit is ullTotalPageFile.
            </summary>
        </member>
        <member name="F:TAlex.Common.Environment.SystemInfo.MEMORYSTATUSEX.ullTotalVirtual">
            <summary>
            Total size of the user mode portion of the virtual address space of the calling process, in bytes.
            </summary>
        </member>
        <member name="F:TAlex.Common.Environment.SystemInfo.MEMORYSTATUSEX.ullAvailVirtual">
            <summary>
            Size of unreserved and uncommitted memory in the user mode portion of the virtual address space of the calling process, in bytes.
            </summary>
        </member>
        <member name="F:TAlex.Common.Environment.SystemInfo.MEMORYSTATUSEX.ullAvailExtendedVirtual">
            <summary>
            Size of unreserved and uncommitted memory in the extended portion of the virtual address space of the calling process, in bytes.
            </summary>
        </member>
        <member name="T:TAlex.Common.Extensions.StringExtensions">
            <summary>
            Provides a set of static helpers methods for strings.
            </summary>
        </member>
        <member name="M:TAlex.Common.Extensions.StringExtensions.Cut(System.String,System.Int32)">
            <summary>
            Returns the reduced string given the structure of words.
            </summary>
            <param name="source">The source string to cutting.</param>
            <param name="length">The maximum length of result string.</param>
            <returns>reduced string.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">length is less than zero.</exception>
        </member>
        <member name="T:TAlex.Common.Diagnostics.TimeMeasurement">
            <summary>
            Represents a convenient mechanism for measuring the time perform the operation.
            </summary>
        </member>
        <member name="M:TAlex.Common.Diagnostics.TimeMeasurement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TAlex.Common.Diagnostics.TimeMeasurement"/> class
            and start time measurement.
            </summary>
            <param name="actionName">A string represents the action name for executing.</param>
        </member>
        <member name="M:TAlex.Common.Diagnostics.TimeMeasurement.TraceAction(System.String,System.Action)">
            <summary>
            Executing the specified action and trace information about elapsed time.
            </summary>
            <param name="actionName">A string represents the action name for executing.</param>
            <param name="action">A delegate represents the action that needed run-time measurements.</param>
        </member>
        <member name="M:TAlex.Common.Diagnostics.TimeMeasurement.Dispose">
            <summary>
            Stop time measurement and trace elapsed time for action executing.
            </summary>
        </member>
        <member name="P:TAlex.Common.Diagnostics.TimeMeasurement.Elapsed">
            <summary>
            Gets a time interval that indicates execution time of the action.
            </summary>
        </member>
        <member name="T:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="M:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="P:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="T:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="M:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplateBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="P:TAlex.Common.Diagnostics.ErrorReporting.ErrorReportHtmlTemplate.Model">
            <summary>
            Gets or sets the model of error report.
            </summary>
        </member>
        <member name="M:TAlex.Common.Configuration.XmlSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">
            A collection of the name/value pairs representing the provider-specific attributes
            specified in the configuration for this provider.
            </param>
        </member>
        <member name="M:TAlex.Common.Configuration.XmlSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>
            Returns the collection of settings property values for the specified application
            instance and settings property group.
            </summary>
            <param name="context">A <see cref="T:System.Configuration.SettingsContext"/> describing the current application use.</param>
            <param name="collection">
            A <see cref="T:System.Configuration.SettingsPropertyCollection"/> containing the settings
            property group whose values are to be retrieved.</param>
            <returns>
            A <see cref="T:System.Configuration.SettingsPropertyValueCollection"/> containing the values
            for the specified settings property group.
            </returns>
        </member>
        <member name="M:TAlex.Common.Configuration.XmlSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
            <summary>
            Sets the values of the specified group of property settings.
            </summary>
            <param name="context">A <see cref="T:System.Configuration.SettingsContext"/> describing the current application usage.</param>
            <param name="collection">
            A <see cref="T:System.Configuration.SettingsPropertyValueCollection"/> representing the group
            of property settings to set.
            </param>
        </member>
        <member name="P:TAlex.Common.Configuration.XmlSettingsProvider.Name">
            <summary>
            Gets the friendly name used to refer to the provider during configuration.
            </summary>
        </member>
        <member name="P:TAlex.Common.Configuration.XmlSettingsProvider.ApplicationName">
            <summary>
            Gets or sets the name of the currently running application.
            </summary>
        </member>
        <member name="P:TAlex.Common.Configuration.XmlSettingsProvider.AppSettingsPath">
            <summary>
            Gets the application settings path.
            </summary>
        </member>
        <member name="P:TAlex.Common.Configuration.XmlSettingsProvider.AppSettingsFilename">
            <summary>
            Gets the name of the application settings file.
            </summary>
        </member>
    </members>
</doc>
